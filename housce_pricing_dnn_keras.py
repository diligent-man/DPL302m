# -*- coding: utf-8 -*-
"""housce-pricing- DNN-keras

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Fa2D3K-ku_Wn5KZOhhiLIGN5s45B2Xw5
"""

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import tensorflow as tf
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from tensorflow import keras
from tensorflow.keras import layers

df = pd.read_csv('/content/Housing.csv')

df

df.columns

df.info()

df.isnull().sum()

df.duplicated().sum()

df = df[['price', 'area', 'bedrooms', 'bathrooms','parking']]

# In dữ liệu lựa chọn
print(df)



scaler = StandardScaler()
df[['price', 'area','bedrooms','bathrooms','parking']] = scaler.fit_transform(df[['price','area','bedrooms','bathrooms','parking']])

df

X = df.drop(['price'], axis=1)
y = df['price']

X_train_dev =df[:500]
y_train_dev = df[:500]
X_test = df[-45:]
y_test = df[-45:]

X_train, X_test, y_train, y_test = X[:500], X[500:], y[:500], y[500:]
# Chuẩn hóa dữ liệu
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

# Xây dựng mô hình DNN
model = keras.Sequential()
model.add(layers.Dense(64, activation='relu', input_shape=(X_train.shape[1],)))
model.add(layers.Dense(64, activation='relu'))
model.add(layers.Dense(1, activation='linear'))
model.compile(optimizer='adam', loss='mean_squared_error')

model.fit(X_train, y_train, epochs=50, batch_size=32, validation_split=0.1)  # Chia thành tập dev

loss = model.evaluate(X_test, y_test)
print(f'Loss on test data: {loss}')

rmse = np.sqrt(loss)
rmse

# Sử dụng mô hình để dự đoán dựa trên tập kiểm tra (45 samples cuối cùng)
predictions = model.predict(X_test)

# In kết quả dự đoán
print(predictions)


programming language theory plt branch computer science deal design implementation analysis characterization classification formal language known programming language individual features
fall within discipline computer science depending affecting mathematics software engineering linguistics even cognitive science
ha become well-recognized branch computer science active research area result published numerous journal dedicated plt well general computer science engineering publications
way history programming language theory predates even development programming language themselves
lambda calculus developed alonzo church stephen cole kleene considered world's first programming language even though wa intended model computation rather mean programmer describe algorithm computer system
many modern functional programming language described providing thin veneer lambda calculus many easily described term it
first programming language invented wa plankalkl wa designed konrad zuse publicly known implemented until
first widely known successful high-level programming language wa fortran developed team ibm researcher led john backus
success fortran led formation committee scientist develop universal computer language result effort wa algol
separately john mccarthy mit developed lisp first language origin academia successful
success initial effort programming language became active topic research beyond
key event history programming language theory since then
noam chomsky developed chomsky hierarchy field linguistics discovery ha directly impacted programming language theory branch computer sciencethe simula language wa developed ole-johan dahl kristen nygaard widely considered first example object-oriented programming language simula also introduced concept coroutines
peter landin first realize church's lambda calculus used model programming languages
landin introduces iswim abstract computer programming language article next programming languages
christopher strachey publishes influential set lecture note fundamental concept programming language introducing terminology r-values l-values parametric polymorphism ad hoc polymorphism
roger hindley publishes principal type-scheme object combinatory logic later generalized hindley-milner type inference algorithm
tony hoare introduces hoare logic form axiomatic semantics
william alvin howard observed high-level proof system referred natural deduction directly interpreted intuitionistic version typed variant model computation known lambda calculus
became known curry-howard correspondencein dana scott first publishes work denotational semantics
logic programming prolog developed thus allowing computer program expressed mathematical logic
team scientist xerox parc led alan kay develop smalltalk object-oriented language widely known innovative development environment
gerald jay sussman guy steele develop scheme programming language lisp dialect incorporating lexical scoping unified namespace element actor model including first-class continuations
backus turing award lecture assailed current state industrial language proposed new class programming language known function-level programming languages
gordon plotkin introduces programming computable function abstract typed functional language
robin milner introduces hindley-milner type inference algorithm ml
type theory became applied discipline programming language application ha led tremendous advance type theory yearsin gordon plotkin publishes paper structured operational semantics
emerged process calculus calculus communicating system robin milner communicating sequential process model c
hoare well similar model concurrency actor model carl hewitt
release miranda spark academic interest lazy-evaluated pure functional programming languages
committee wa formed define open standard resulting release haskell standard in
bertrand meyer created methodology design contract incorporated eiffel programming languagegregor kiczales jim de rivieres daniel g
eugenio moggi philip wadler introduced use monad structuring program written functional programming languagesthere several field study either lie within programming language theory profound influence many considerable overlap
addition plt make use many branch mathematics including computability theory category theory set theory
formal semantics formal specification behaviour computer program programming languages
three common approach describe semantics meaning computer program denotational semantics operational semantics axiomatic semantics
type theory study type system tractable syntactic method proving absence certain program behavior classifying phrase according kind value compute
program analysis general problem examining program determining key characteristic absence class program errors
program transformation process transforming program one form language another form
comparative programming language analysis seek classify programming language different type based characteristic broad category programming language often known programming paradigms
metaprogramming generation higher-order program executed produce program possibly different language subset original language result
domain-specific language language constructed efficiently solve problem particular part domain
compiler theory theory writing compiler generally translator program translate program written one language another form
action compiler traditionally broken syntax analysis scanning parsing semantic analysis determining program optimization improving performance program indicated metric typically execution speed code generation generation output equivalent program target language often instruction set cpu
run-time system refer development programming language runtime environment component including virtual machine garbage collection foreign function interfaces
well known conference include symposium principle programming language popl programming language design implementation pldi international conference functional programming icfp international conference object oriented programming system language application oopsla international conference architectural support programming language operating system asplos
notable journal publish plt research include acm transaction programming language system toplas journal functional programming jfp journal functional logic programming higher-order symbolic computation
theoretical aspect object oriented programming language type semantics language design
software foundationslambda ultimate community weblog professional discussion repository document programming language theory